"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/providers/route";
exports.ids = ["app/api/providers/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproviders%2Froute&page=%2Fapi%2Fproviders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproviders%2Froute.ts&appDir=%2FUsers%2Fvyang%2FDesktop%2Fspaces%2Fmanga_learnjp%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvyang%2FDesktop%2Fspaces%2Fmanga_learnjp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproviders%2Froute&page=%2Fapi%2Fproviders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproviders%2Froute.ts&appDir=%2FUsers%2Fvyang%2FDesktop%2Fspaces%2Fmanga_learnjp%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvyang%2FDesktop%2Fspaces%2Fmanga_learnjp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var _Users_vyang_Desktop_spaces_manga_learnjp_src_app_api_providers_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/app/api/providers/route.ts */ \"(rsc)/./src/app/api/providers/route.ts\");\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/providers/route\",\n        pathname: \"/api/providers\",\n        filename: \"route\",\n        bundlePath: \"app/api/providers/route\"\n    },\n    resolvedPagePath: \"/Users/vyang/Desktop/spaces/manga_learnjp/src/app/api/providers/route.ts\",\n    nextConfigOutput,\n    userland: _Users_vyang_Desktop_spaces_manga_learnjp_src_app_api_providers_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/providers/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZwcm92aWRlcnMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnByb3ZpZGVycyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnByb3ZpZGVycyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnZ5YW5nJTJGRGVza3RvcCUyRnNwYWNlcyUyRm1hbmdhX2xlYXJuanAlMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGdnlhbmclMkZEZXNrdG9wJTJGc3BhY2VzJTJGbWFuZ2FfbGVhcm5qcCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDc0M7QUFDckc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDaUo7O0FBRWpKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFuZ2EtbGVhcm5qcC8/YzA1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvdnlhbmcvRGVza3RvcC9zcGFjZXMvbWFuZ2FfbGVhcm5qcC9zcmMvYXBwL2FwaS9wcm92aWRlcnMvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3Byb3ZpZGVycy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3Byb3ZpZGVyc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvcHJvdmlkZXJzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3Z5YW5nL0Rlc2t0b3Avc3BhY2VzL21hbmdhX2xlYXJuanAvc3JjL2FwcC9hcGkvcHJvdmlkZXJzL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3Byb3ZpZGVycy9yb3V0ZVwiO1xuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsIG9yaWdpbmFsUGF0aG5hbWUsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproviders%2Froute&page=%2Fapi%2Fproviders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproviders%2Froute.ts&appDir=%2FUsers%2Fvyang%2FDesktop%2Fspaces%2Fmanga_learnjp%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvyang%2FDesktop%2Fspaces%2Fmanga_learnjp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/providers/route.ts":
/*!****************************************!*\
  !*** ./src/app/api/providers/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_ai_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/ai-service */ \"(rsc)/./src/lib/ai-service.ts\");\n\n\nasync function GET() {\n    try {\n        const openaiApiKey = process.env.OPENAI_API_KEY;\n        const geminiApiKey = process.env.GEMINI_API_KEY;\n        const aiService = new _lib_ai_service__WEBPACK_IMPORTED_MODULE_1__.AIAnalysisService(openaiApiKey, geminiApiKey);\n        const availableProviders = aiService.getAvailableProviders();\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            providers: availableProviders,\n            default: \"openai\" || 0\n        });\n    } catch (error) {\n        console.error(\"Error checking providers:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to check available providers\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9wcm92aWRlcnMvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBDO0FBQ1U7QUFFN0MsZUFBZUU7SUFDcEIsSUFBSTtRQUNGLE1BQU1DLGVBQWVDLFFBQVFDLEdBQUcsQ0FBQ0MsY0FBYztRQUMvQyxNQUFNQyxlQUFlSCxRQUFRQyxHQUFHLENBQUNHLGNBQWM7UUFFL0MsTUFBTUMsWUFBWSxJQUFJUiw4REFBaUJBLENBQUNFLGNBQWNJO1FBQ3RELE1BQU1HLHFCQUFxQkQsVUFBVUUscUJBQXFCO1FBRTFELE9BQU9YLGtGQUFZQSxDQUFDWSxJQUFJLENBQUM7WUFDdkJDLFdBQVdIO1lBQ1hJLFNBQVNWLFFBQTJDLElBQUk7UUFDMUQ7SUFDRixFQUFFLE9BQU9ZLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLDZCQUE2QkE7UUFDM0MsT0FBT2hCLGtGQUFZQSxDQUFDWSxJQUFJLENBQ3RCO1lBQUVJLE9BQU87UUFBc0MsR0FDL0M7WUFBRUUsUUFBUTtRQUFJO0lBRWxCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYW5nYS1sZWFybmpwLy4vc3JjL2FwcC9hcGkvcHJvdmlkZXJzL3JvdXRlLnRzP2QwNzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXG5pbXBvcnQgeyBBSUFuYWx5c2lzU2VydmljZSB9IGZyb20gJ0AvbGliL2FpLXNlcnZpY2UnXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQoKSB7XG4gIHRyeSB7XG4gICAgY29uc3Qgb3BlbmFpQXBpS2V5ID0gcHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVlcbiAgICBjb25zdCBnZW1pbmlBcGlLZXkgPSBwcm9jZXNzLmVudi5HRU1JTklfQVBJX0tFWVxuXG4gICAgY29uc3QgYWlTZXJ2aWNlID0gbmV3IEFJQW5hbHlzaXNTZXJ2aWNlKG9wZW5haUFwaUtleSwgZ2VtaW5pQXBpS2V5KVxuICAgIGNvbnN0IGF2YWlsYWJsZVByb3ZpZGVycyA9IGFpU2VydmljZS5nZXRBdmFpbGFibGVQcm92aWRlcnMoKVxuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHByb3ZpZGVyczogYXZhaWxhYmxlUHJvdmlkZXJzLFxuICAgICAgZGVmYXVsdDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfREVGQVVMVF9BSV9QUk9WSURFUiB8fCAnb3BlbmFpJ1xuICAgIH0pXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgY2hlY2tpbmcgcHJvdmlkZXJzOicsIGVycm9yKVxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgZXJyb3I6ICdGYWlsZWQgdG8gY2hlY2sgYXZhaWxhYmxlIHByb3ZpZGVycycgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgIClcbiAgfVxufVxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsIkFJQW5hbHlzaXNTZXJ2aWNlIiwiR0VUIiwib3BlbmFpQXBpS2V5IiwicHJvY2VzcyIsImVudiIsIk9QRU5BSV9BUElfS0VZIiwiZ2VtaW5pQXBpS2V5IiwiR0VNSU5JX0FQSV9LRVkiLCJhaVNlcnZpY2UiLCJhdmFpbGFibGVQcm92aWRlcnMiLCJnZXRBdmFpbGFibGVQcm92aWRlcnMiLCJqc29uIiwicHJvdmlkZXJzIiwiZGVmYXVsdCIsIk5FWFRfUFVCTElDX0RFRkFVTFRfQUlfUFJPVklERVIiLCJlcnJvciIsImNvbnNvbGUiLCJzdGF0dXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/providers/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/ai-service.ts":
/*!*******************************!*\
  !*** ./src/lib/ai-service.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AIAnalysisService: () => (/* binding */ AIAnalysisService),\n/* harmony export */   GeminiService: () => (/* binding */ GeminiService),\n/* harmony export */   OpenAIFormatService: () => (/* binding */ OpenAIFormatService),\n/* harmony export */   OpenAIService: () => (/* binding */ OpenAIService)\n/* harmony export */ });\n/* harmony import */ var _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google/generative-ai */ \"(rsc)/./node_modules/@google/generative-ai/dist/index.mjs\");\n\nconst ANALYSIS_PROMPT = (text)=>`\nYou are a Japanese language learning assistant. ${text ? `Analyze the following Japanese text extracted from manga` : `Look at this manga image and extract all Japanese text, then analyze it`} and provide detailed explanations for language learners.\n\n${text ? `Japanese Text:\\n\"${text}\"` : \"\"}\n\nPlease provide a JSON response with the following structure:\n{\n  \"extractedText\": \"${text ? text : \"All Japanese text found in the image\"}\",\n  \"translation\": \"English translation of the text\",\n  \"summary\": \"Brief context summary explaining what's happening in this manga scene\",\n  \"words\": [\n    {\n      \"word\": \"Japanese word\",\n      \"reading\": \"hiragana/katakana reading\",\n      \"meaning\": \"English meaning\",\n      \"partOfSpeech\": \"noun/verb/adjective/etc\",\n      \"difficulty\": \"beginner/intermediate/advanced\"\n    }\n  ],\n  \"grammar\": [\n    {\n      \"pattern\": \"Grammar pattern found in text\",\n      \"explanation\": \"Detailed explanation of the grammar pattern\",\n      \"example\": \"Example sentence using this pattern\"\n    }\n  ]\n}\n\nFocus on:\n1. ${text ? \"\" : \"First, accurately extracting ALL Japanese text from the manga image (including text in speech bubbles, sound effects, signs, etc.)\"} \n2. Breaking down important vocabulary words, especially those that might be difficult for learners\n3. Identifying key grammar patterns and structures\n4. Providing context for manga-specific language or expressions\n5. Assigning appropriate difficulty levels (beginner: JLPT N5-N4, intermediate: N3-N2, advanced: N1+)\n6. Including furigana readings for kanji\n7. Explaining any colloquialisms, slang, or casual speech patterns common in manga\n8. ${text ? \"\" : \"Recognizing manga sound effects (onomatopoeia) and their meanings\"}\n\nMake sure the response is valid JSON format.`;\nclass OpenAIService {\n    constructor(apiKey){\n        this.apiKey = apiKey;\n    }\n    async analyzeText(text) {\n        const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${this.apiKey}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                model: \"gpt-4-turbo-preview\",\n                messages: [\n                    {\n                        role: \"system\",\n                        content: \"You are a helpful Japanese language learning assistant that provides detailed analysis of Japanese text for learners. Always respond with valid JSON.\"\n                    },\n                    {\n                        role: \"user\",\n                        content: ANALYSIS_PROMPT(text)\n                    }\n                ],\n                temperature: 0.3,\n                max_tokens: 2000\n            })\n        });\n        if (!response.ok) {\n            throw new Error(`OpenAI API error: ${response.status}`);\n        }\n        const data = await response.json();\n        const content = data.choices[0]?.message?.content;\n        if (!content) {\n            throw new Error(\"No content received from OpenAI\");\n        }\n        const analysisResult = JSON.parse(content);\n        return {\n            ...analysisResult,\n            provider: \"openai\"\n        };\n    }\n    async analyzeImage(imageBase64) {\n        const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${this.apiKey}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                model: \"gpt-4-vision-preview\",\n                messages: [\n                    {\n                        role: \"system\",\n                        content: \"You are a helpful Japanese language learning assistant that can read Japanese text from manga images and provide detailed analysis for learners. Always respond with valid JSON.\"\n                    },\n                    {\n                        role: \"user\",\n                        content: [\n                            {\n                                type: \"text\",\n                                text: ANALYSIS_PROMPT()\n                            },\n                            {\n                                type: \"image_url\",\n                                image_url: {\n                                    url: `data:image/jpeg;base64,${imageBase64}`\n                                }\n                            }\n                        ]\n                    }\n                ],\n                temperature: 0.3,\n                max_tokens: 2000\n            })\n        });\n        if (!response.ok) {\n            throw new Error(`OpenAI API error: ${response.status}`);\n        }\n        const data = await response.json();\n        const content = data.choices[0]?.message?.content;\n        if (!content) {\n            throw new Error(\"No content received from OpenAI\");\n        }\n        const analysisResult = JSON.parse(content);\n        return {\n            ...analysisResult,\n            provider: \"openai\"\n        };\n    }\n}\nclass GeminiService {\n    constructor(apiKey){\n        this.genAI = new _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.GoogleGenerativeAI(apiKey);\n        this.model = this.genAI.getGenerativeModel({\n            model: \"gemini-1.5-pro\"\n        });\n    }\n    async analyzeText(text) {\n        const prompt = ANALYSIS_PROMPT(text);\n        const result = await this.model.generateContent([\n            {\n                text: prompt\n            }\n        ]);\n        const response = await result.response;\n        const content = response.text();\n        if (!content) {\n            throw new Error(\"No content received from Gemini\");\n        }\n        // Clean up the response to extract JSON\n        const jsonMatch = content.match(/\\{[\\s\\S]*\\}/);\n        if (!jsonMatch) {\n            throw new Error(\"Invalid JSON response from Gemini\");\n        }\n        const analysisResult = JSON.parse(jsonMatch[0]);\n        return {\n            ...analysisResult,\n            provider: \"gemini\"\n        };\n    }\n    async analyzeImage(imageBase64) {\n        const prompt = ANALYSIS_PROMPT();\n        // Convert base64 to format Gemini expects\n        const imagePart = {\n            inlineData: {\n                data: imageBase64,\n                mimeType: \"image/jpeg\"\n            }\n        };\n        const result = await this.model.generateContent([\n            prompt,\n            imagePart\n        ]);\n        const response = await result.response;\n        const content = response.text();\n        if (!content) {\n            throw new Error(\"No content received from Gemini\");\n        }\n        // Clean up the response to extract JSON\n        const jsonMatch = content.match(/\\{[\\s\\S]*\\}/);\n        if (!jsonMatch) {\n            throw new Error(\"Invalid JSON response from Gemini\");\n        }\n        const analysisResult = JSON.parse(jsonMatch[0]);\n        return {\n            ...analysisResult,\n            provider: \"gemini\"\n        };\n    }\n}\nclass OpenAIFormatService {\n    constructor(settings){\n        this.settings = settings;\n    }\n    async analyzeText(text) {\n        const headers = {\n            \"Content-Type\": \"application/json\"\n        };\n        if (this.settings.apiKey) {\n            headers[\"Authorization\"] = `Bearer ${this.settings.apiKey}`;\n        }\n        const response = await fetch(`${this.settings.endpoint}/chat/completions`, {\n            method: \"POST\",\n            headers,\n            body: JSON.stringify({\n                model: this.settings.model,\n                messages: [\n                    {\n                        role: \"system\",\n                        content: \"You are a helpful Japanese language learning assistant that provides detailed analysis of Japanese text for learners. Always respond with valid JSON.\"\n                    },\n                    {\n                        role: \"user\",\n                        content: ANALYSIS_PROMPT(text)\n                    }\n                ],\n                temperature: 0.3,\n                max_tokens: 2000\n            })\n        });\n        if (!response.ok) {\n            throw new Error(`OpenAI-format API error: ${response.status} - ${await response.text()}`);\n        }\n        const data = await response.json();\n        const content = data.choices[0]?.message?.content;\n        if (!content) {\n            throw new Error(\"No content received from OpenAI-format API\");\n        }\n        try {\n            const analysisResult = JSON.parse(content);\n            return {\n                ...analysisResult,\n                provider: \"openai-format\"\n            };\n        } catch (error) {\n            throw new Error(`Failed to parse JSON response: ${content}`);\n        }\n    }\n    async analyzeImage(imageBase64) {\n        const headers = {\n            \"Content-Type\": \"application/json\"\n        };\n        if (this.settings.apiKey) {\n            headers[\"Authorization\"] = `Bearer ${this.settings.apiKey}`;\n        }\n        const response = await fetch(`${this.settings.endpoint}/chat/completions`, {\n            method: \"POST\",\n            headers,\n            body: JSON.stringify({\n                model: this.settings.model,\n                messages: [\n                    {\n                        role: \"system\",\n                        content: \"You are a helpful Japanese language learning assistant that can read Japanese text from manga images and provide detailed analysis for learners. Always respond with valid JSON.\"\n                    },\n                    {\n                        role: \"user\",\n                        content: [\n                            {\n                                type: \"text\",\n                                text: ANALYSIS_PROMPT()\n                            },\n                            {\n                                type: \"image_url\",\n                                image_url: {\n                                    url: `data:image/jpeg;base64,${imageBase64}`\n                                }\n                            }\n                        ]\n                    }\n                ],\n                temperature: 0.3,\n                max_tokens: 2000\n            })\n        });\n        if (!response.ok) {\n            throw new Error(`OpenAI-format API error: ${response.status} - ${await response.text()}`);\n        }\n        const data = await response.json();\n        const content = data.choices[0]?.message?.content;\n        if (!content) {\n            throw new Error(\"No content received from OpenAI-format API\");\n        }\n        try {\n            const analysisResult = JSON.parse(content);\n            return {\n                ...analysisResult,\n                provider: \"openai-format\"\n            };\n        } catch (error) {\n            throw new Error(`Failed to parse JSON response: ${content}`);\n        }\n    }\n}\nclass AIAnalysisService {\n    constructor(openaiKey, geminiKey, openaiFormatSettings){\n        if (openaiKey) {\n            this.openaiService = new OpenAIService(openaiKey);\n        }\n        if (geminiKey) {\n            this.geminiService = new GeminiService(geminiKey);\n        }\n        if (openaiFormatSettings) {\n            this.openaiFormatService = new OpenAIFormatService(openaiFormatSettings);\n        }\n    }\n    async analyzeText(text, provider = \"openai\") {\n        if (provider === \"openai\" && this.openaiService) {\n            return await this.openaiService.analyzeText(text);\n        } else if (provider === \"gemini\" && this.geminiService) {\n            return await this.geminiService.analyzeText(text);\n        } else if (provider === \"openai-format\" && this.openaiFormatService) {\n            return await this.openaiFormatService.analyzeText(text);\n        } else {\n            throw new Error(`${provider} service not available or not configured`);\n        }\n    }\n    async analyzeImage(imageBase64, provider = \"openai\") {\n        if (provider === \"openai\" && this.openaiService) {\n            return await this.openaiService.analyzeImage(imageBase64);\n        } else if (provider === \"gemini\" && this.geminiService) {\n            return await this.geminiService.analyzeImage(imageBase64);\n        } else if (provider === \"openai-format\" && this.openaiFormatService) {\n            return await this.openaiFormatService.analyzeImage(imageBase64);\n        } else {\n            throw new Error(`${provider} service not available or not configured`);\n        }\n    }\n    getAvailableProviders() {\n        const providers = [];\n        if (this.openaiService) providers.push(\"openai\");\n        if (this.geminiService) providers.push(\"gemini\");\n        if (this.openaiFormatService) providers.push(\"openai-format\");\n        return providers;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/ai-service.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@google"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproviders%2Froute&page=%2Fapi%2Fproviders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproviders%2Froute.ts&appDir=%2FUsers%2Fvyang%2FDesktop%2Fspaces%2Fmanga_learnjp%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvyang%2FDesktop%2Fspaces%2Fmanga_learnjp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();